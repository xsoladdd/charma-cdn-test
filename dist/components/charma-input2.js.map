{"file":"charma-input2.js","mappings":";;;;AAAA,MAAM,cAAc,GAAG,q8cAAq8c;;MCS/8c,WAAW;;;;;;IAWtB,aAAQ,GAAG;MACT,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;KAC9B,CAAC;IAEF,iBAAY,GAAG,CAAC,KAAY;MAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC;KACjE,CAAC;iBAhBc,EAAE;gBACH,cAAc;mBACV,KAAK;iBACS,EAAE;uBACb,EAAE;oBACL,KAAK;iBACR,EAAE;;EAYlB,MAAM;IACJ,MAAM,UAAU,GAAG,YAAM,KAAK,EAAC,sBAAsB,IAAEA,QAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAQ,CAAC;IACrF,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,oBAAoB,IAC7B,aACE,KAAK,EAAE,SAAS,CAAC,4FAA4F,EAAE,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,EAAE,CAAC,EACnJ,OAAO,EAAE,IAAI,CAAC,IAAI,IAEjB,IAAI,CAAC,KAAK,OAAG,IAAI,CAAC,QAAQ,IAAI,YAAM,KAAK,EAAC,cAAc,QAAS,CAC5D,EACR,WAAK,KAAK,EAAC,qBAAqB,IAC9B,aACE,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,SAAS,CACd,uUAAuU,EACvU,IAAI,CAAC,KAAK,GAAG,gBAAgB,GAAG,EAAE,CACnC,EACD,EAAE,EAAE,IAAI,CAAC,IAAI,EACb,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,GACjB,EACD,IAAI,CAAC,KAAK,IAAI,UAAU,CACrB,CACF,CACD,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["i18next"],"sources":["src/components/ui/charma-input/charma-input.scss?tag=charma-input&encapsulation=shadow","src/components/ui/charma-input/charma-input.tsx"],"sourcesContent":[":host {\n  all: initial;\n}\n","import { Component, Host, h, Prop, State, EventEmitter, Event } from '@stencil/core';\nimport { joinClass } from '../../../utils/joinClass';\nimport i18next from 'i18next';\n\n@Component({\n  tag: 'charma-input',\n  styleUrl: 'charma-input.scss',\n  shadow: true,\n})\nexport class CharmaInput {\n  @Prop() label = '';\n  @Prop() name = 'charma-input';\n  @State() focused = false;\n  @Prop({ reflect: true }) value = '';\n  @Prop() placeholder = '';\n  @Prop() required = false;\n  @Prop() error = '';\n\n  @Event() valueChange: EventEmitter<string>;\n\n  setFocus = () => {\n    this.focused = !this.focused;\n  };\n\n  handleChange = (event: Event) => {\n    this.valueChange.emit((event.target as HTMLInputElement).value);\n  };\n\n  render() {\n    const errorBlock = <span class=\"text-xs text-red-500\">{i18next.t(this.error)}</span>;\n    return (\n      <Host>\n        <div class=\"grid gap-2 font-ns\">\n          <label\n            class={joinClass('text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70', this.focused ? ' border-black' : '')}\n            htmlFor={this.name}\n          >\n            {this.label} {this.required && <span class=\"text-red-500\">*</span>}\n          </label>\n          <div class=\"flex flex-col gap-1\">\n            <input\n              type=\"text\"\n              class={joinClass(\n                'flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50',\n                this.error ? 'border-red-500' : '',\n              )}\n              id={this.name}\n              name={this.name}\n              placeholder={this.placeholder}\n              onChange={this.handleChange}\n              value={this.value}\n            />\n            {this.error && errorBlock}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n\n// 209213  +63288910000 2023101929002553\n"],"version":3}