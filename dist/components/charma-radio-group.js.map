{"file":"charma-radio-group.js","mappings":";;;AAAA,MAAM,mBAAmB,GAAG,qhKAAqhK;;MCSpiKA,kBAAgB;;;;;;IAY3B,iBAAY,GAAG,CAAC,KAAY;MAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC,CAAC;KACjE,CAAC;iBAZc,EAAE;gBACH,oBAAoB;mBACF,EAAE;oBACS,EAAE;oBAC3B,IAAI;iBACP,KAAK;uBAC4B,UAAU;;EAQ3D,MAAM;IACJ,QACE,EAAC,IAAI,QACH,gBACE,WAAK,KAAK,EAAE,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,KAAK,UAAU,GAAG,gBAAgB,GAAG,WAAW,CAAC,IAC7F,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE;MACjC,QACE,WAAK,KAAK,EAAC,yBAAyB,IAClC,aACE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,EAAE,EAAE,MAAM,KAAK,EAAE,EACjB,IAAI,EAAC,OAAO,EACZ,IAAI,EAAE,MAAM,KAAK,EAAE,EACnB,KAAK,EAAE,KAAK,EACZ,KAAK,EAAC,kHAAkH,EACxH,OAAO,EAAE,IAAI,CAAC,QAAQ,KAAK,KAAK,GAChC,EACF,aAAO,OAAO,EAAE,MAAM,KAAK,EAAE,EAAE,KAAK,EAAC,wEAAwE,IAC1G,KAAK,CACA,CACJ,EACN;KACH,CAAC,CACE,CACD,CACF,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["CharmaRadioGroup"],"sources":["src/components/ui/charma-radio-group/charma-radio-group.scss?tag=charma-radio-group&encapsulation=shadow","src/components/ui/charma-radio-group/charma-radio-group.tsx"],"sourcesContent":[":host {\n  all: initial;\n}\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\nimport { TRadioOptions } from './type';\nimport { joinClass } from '../../../utils/joinClass';\n\n@Component({\n  tag: 'charma-radio-group',\n  styleUrl: 'charma-radio-group.scss',\n  shadow: true,\n})\nexport class CharmaRadioGroup {\n  // Declare props\n  @Prop() label = '';\n  @Prop() name = 'charma-radio-group';\n  @Prop() options: TRadioOptions = [];\n  @Prop({ reflect: true }) selected: string = '';\n  @Prop() required = true;\n  @Prop() error = false;\n  @Prop() orientation: 'vertical' | 'horizontal' = 'vertical';\n\n  @Event() valueChange: EventEmitter<string>;\n\n  handleChange = (event: Event) => {\n    this.valueChange.emit((event.target as HTMLInputElement).value);\n  };\n\n  render() {\n    return (\n      <Host>\n        <slot>\n          <div class={joinClass('flex ', this.orientation === 'vertical' ? 'flex-row gap-5' : ' flex-col')}>\n            {this.options.map(({ title, value }) => {\n              return (\n                <div class=\"flex items-center mb-4 \">\n                  <input\n                    onChange={this.handleChange}\n                    id={`rb-${title}`}\n                    type=\"radio\"\n                    name={`rb-${title}`}\n                    value={value}\n                    class=\"h-4 w-4 border-gray-300 focus:ring-2 focus:ring-blue-300 cursor-pointer font-body text-base transition-transform\"\n                    checked={this.selected === value}\n                  />\n                  <label htmlFor={`rb-${title}`} class=\"font-body text-base text-gray-900 ml-2 block capitalize cursor-pointer\">\n                    {title}\n                  </label>\n                </div>\n              );\n            })}\n          </div>\n        </slot>\n      </Host>\n    );\n  }\n}\n"],"version":3}