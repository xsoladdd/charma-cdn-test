{"version":3,"file":"products.types.js","sourceRoot":"","sources":["../../src/types/products.types.ts"],"names":[],"mappings":"","sourcesContent":["import { TImage, TLocalizeString, TPagination } from './common.types';\n\nexport interface TGetProductsResponse extends TPagination {\n  products: Array<TProductsReponse>;\n}\n\nexport type TGetProductResponse = TProductsReponse;\n\nexport type TProductsReponse = {\n  id: string;\n  articleNumber: string;\n  productIdentifier: string;\n  availableDeliveryMethods?: Array<string>;\n  mpn: string;\n  name: TLocalizeString;\n  variantName: TLocalizeString;\n  description: TLocalizeString;\n  brandName: TLocalizeString;\n  colorCode?: string;\n  image?: TImage;\n  countryOfOrigin: string;\n  hsCode: string;\n  ean: string;\n  price: Price;\n  variants: (string | undefined)[];\n  sustainable: boolean;\n  availableStock?: AvailableStock;\n  availableOptions?: Array<AvailableOptions>;\n};\n\nexport interface AvailableOptions {\n  id: string;\n  name: TLocalizeString;\n  description: TLocalizeString;\n  price: Price;\n}\n\nexport interface AvailableStock {\n  internal: number;\n  external: number;\n}\n\nexport interface Price {\n  currency: string;\n  tax: number;\n  value: number;\n}\n"]}