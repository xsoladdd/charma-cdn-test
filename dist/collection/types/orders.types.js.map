{"version":3,"file":"orders.types.js","sourceRoot":"","sources":["../../src/types/orders.types.ts"],"names":[],"mappings":"","sourcesContent":["import { TLocalizeString, TPagination, TPrice } from './common.types';\n\nexport type TGetCartResponse = {\n  id: string;\n};\n\nexport interface TGetOrdersResponse extends TPagination {\n  orders: Array<TGetOrderResponse>;\n}\n\nexport interface TCreateOrderResponse extends TGetOrderResponse {}\n\nexport type TGetOrderResponse = {\n  orderLines: Array<OrderLines>;\n  delivery: DeliveryAddress;\n  billingAddress: BillingAddress;\n  // personalization: Personalization;\n  totalPrice: TPrice;\n  deliveryMethodCode: string;\n  fulfilmentStatus: TLocalizeString | string;\n  financialStatus: TLocalizeString | string;\n  shippedAt?: string | null;\n  shortId: number;\n  createdAt: string;\n};\n\nexport interface Personalization {\n  greeting: string;\n  greetingStyle: string;\n}\n\nexport interface BillingAddress extends Address {\n  // paymentType: string;\n  invoiceType: string;\n  VAT: string;\n  reference: string;\n  organisationRegistrationId: string;\n  // note: string;\n}\n\nexport interface Address {\n  deliveryMethodCode?: string | null;\n  deliveryDate?: string | null;\n  email?: string | null;\n  phone?: string | null;\n  name?: string | null;\n  careOf?: string | null;\n  attention?: string | null;\n  streetAddress?: string | null;\n  streetAddress2?: string | null;\n  postalCode?: string | null;\n  city?: string | null;\n  country?: string | null;\n  note?: string | null;\n  organizationName?: string | null;\n}\n\nexport type DeliveryAddress = Address;\n\nexport interface OrderLines {\n  productArticleNumber?: string | null;\n  quantity: number;\n  options: string[];\n}\n"]}