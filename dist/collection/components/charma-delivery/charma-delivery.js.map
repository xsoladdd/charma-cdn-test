{"version":3,"file":"charma-delivery.js","sourceRoot":"","sources":["../../../src/components/charma-delivery/charma-delivery.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop } from '@stencil/core';\nimport { deliveryState, widgetState } from '../../store';\nimport i18next from 'i18next';\nimport { DropdownOption } from '../ui/charma-dropdown/charma-dropdown';\nimport { charmaAPI } from '../../api';\nimport { joinClass } from '../../utils/joinClass';\nimport { CharmaInputCustomEvent } from '../../components';\nimport { IWidgetState } from '../../store/types';\n@Component({\n  tag: 'charma-delivery',\n  styleUrl: 'charma-delivery.scss',\n  shadow: true,\n})\nexport class CharmaDelivery {\n  // Passing this down so it will rerender once switched of language\n  @Prop() language: string;\n\n  options: DropdownOption[] = charmaAPI.keyMetadata.countries.map(country => ({\n    label: country.nicename,\n    value: country.iso,\n  }));\n\n  handleInputChange(e: CharmaInputCustomEvent<string>) {\n    deliveryState[e.target.id] = e.detail;\n  }\n\n  handleBlur = (e: FocusEvent) => {\n    const key = e.target['id'];\n    if (widgetState.deliveryFormErrors?.[key]) {\n      widgetState.deliveryFormErrors[key] = undefined;\n      widgetState.error = undefined;\n    }\n  };\n\n  getError(id: keyof IWidgetState['deliveryFormErrors']): string {\n    return widgetState.deliveryFormErrors?.[id]?.length > 0 ? widgetState.deliveryFormErrors?.[id][0] : '';\n  }\n\n  render() {\n    const shippingInfoType = (\n      <div class=\"flex place-content-center\">\n        <div role=\"radiogroup\" aria-required=\"false\" dir=\"ltr\" class=\" grid grid-cols-2 gap-4\" tabindex=\"0\">\n          <div class=\"w-[160px]\">\n            <button\n              type=\"button\"\n              role=\"radio\"\n              aria-checked=\"false\"\n              data-state=\"unchecked\"\n              value=\"personal\"\n              class=\"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 peer sr-only\"\n              id=\"personal\"\n              tabindex=\"-1\"\n              data-radix-collection-item=\"\"\n              onClick={() => {\n                deliveryState.type = 'personal';\n                deliveryState.organizationName = '';\n              }}\n            ></button>\n            <label\n              class={joinClass(\n                'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-primary [&amp;:has([data-state=checked])]:border-primary font-ns cursor-pointer transition delay-0 duration-300 ease-in-out',\n                deliveryState.type === 'personal' ? 'border-black/50' : ' ',\n              )}\n              htmlFor=\"personal\"\n            >\n              <div class=\"py-2\">\n                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M0.5 8.10882L7.38769 1.2521C7.72615 0.915966 8.27385 0.915966 8.61154 1.2521L15.5 8.10882M2.23077 6.38603V14.1386C2.23077 14.6141 2.61846 15 3.09615 15H6.26923V11.2673C6.26923 10.7918 6.65692 10.4059 7.13462 10.4059H8.86538C9.34308 10.4059 9.73077 10.7918 9.73077 11.2673V15H12.9038C13.3815 15 13.7692 14.6141 13.7692 14.1386V6.38603M5.11538 15H11.4615\"\n                    stroke=\"black\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                </svg>\n              </div>\n              {i18next.t('shippingInfromation.form.button.personal')}\n            </label>\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              role=\"radio\"\n              aria-checked=\"false\"\n              data-state=\"unchecked\"\n              value=\"company\"\n              class=\"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 peer sr-only\"\n              id=\"company\"\n              tabindex=\"-1\"\n              data-radix-collection-item=\"\"\n              onClick={() => {\n                deliveryState.givenName = '';\n                deliveryState.familyName = '';\n                deliveryState.type = 'company';\n              }}\n            ></button>\n            <label\n              class={joinClass(\n                'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-primary [&amp;:has([data-state=checked])]:border-primary font-ns cursor-pointer transition delay-0 duration-300 ease-in-out',\n                deliveryState.type === 'company' ? 'border-black/50' : '',\n              )}\n              htmlFor=\"company\"\n            >\n              <div class=\"py-2\">\n                <svg width=\"26\" height=\"22\" viewBox=\"0 0 20 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M0.816406 16H19.1838M2.22928 1V16M12.1194 1V16M17.7709 4.75V16M5.05503 4.125H5.76146M5.05503 6.625H5.76146M5.05503 9.125H5.76146M8.58721 4.125H9.29365M8.58721 6.625H9.29365M8.58721 9.125H9.29365M5.05503 16V13.1875C5.05503 12.67 5.52975 12.25 6.11468 12.25H8.23399C8.81892 12.25 9.29365 12.67 9.29365 13.1875V16M1.52284 1H12.8258M12.1194 4.75H18.4773M14.9451 7.875H14.9527V7.88167H14.9451V7.875ZM14.9451 10.375H14.9527V10.3817H14.9451V10.375ZM14.9451 12.875H14.9527V12.8817H14.9451V12.875Z\"\n                    stroke=\"black\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                  />\n                </svg>\n              </div>\n              {i18next.t('shippingInfromation.form.button.company')}\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n    return (\n      <Host>\n        <section>\n          <div class=\"rounded-md p-6 mb-4 bg-white flex flex-col gap-3\">\n            <div class=\"\">{shippingInfoType}</div>\n            {deliveryState.type === 'personal' ? (\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 \">\n                <charma-input\n                  required={deliveryState.type === 'personal'}\n                  value={deliveryState.givenName}\n                  onValueChange={this.handleInputChange}\n                  label={i18next.t('shippingInfromation.form.given_name')}\n                  name=\"givenName\"\n                  id=\"givenName\"\n                  onBlur={this.handleBlur}\n                  error={this.getError('givenName')}\n                ></charma-input>\n                <charma-input\n                  required={deliveryState.type === 'personal'}\n                  value={deliveryState.familyName}\n                  onValueChange={this.handleInputChange}\n                  label={i18next.t('shippingInfromation.form.family_name')}\n                  name=\"familyName\"\n                  id=\"familyName\"\n                  onBlur={this.handleBlur}\n                  error={this.getError('familyName')}\n                ></charma-input>\n              </div>\n            ) : (\n              <div class=\"grid grid-cols-1 gap-6 \">\n                <charma-input\n                  required={deliveryState.type === 'company'}\n                  value={deliveryState.organizationName}\n                  onValueChange={this.handleInputChange}\n                  label={i18next.t('shippingInfromation.form.organization_name')}\n                  name=\"organizationName\"\n                  id=\"organizationName\"\n                  onBlur={this.handleBlur}\n                  error={this.getError('organizationName')}\n                ></charma-input>\n              </div>\n            )}\n\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 \">\n              <charma-input\n                required={true}\n                value={deliveryState.phone}\n                onValueChange={this.handleInputChange}\n                label={i18next.t('shippingInfromation.form.phone')}\n                name=\"phone\"\n                id=\"phone\"\n                onBlur={this.handleBlur}\n                error={this.getError('phone')}\n              ></charma-input>\n              <charma-input\n                value={deliveryState.careOf}\n                onValueChange={this.handleInputChange}\n                label={i18next.t('shippingInfromation.form.care_of')}\n                name=\"careOf\"\n                id=\"careOf\"\n                onBlur={this.handleBlur}\n                error={this.getError('careOf')}\n              ></charma-input>\n            </div>\n\n            <div class=\"\">\n              <charma-input\n                required={true}\n                value={deliveryState.email}\n                onValueChange={this.handleInputChange}\n                label={i18next.t('shippingInfromation.form.email')}\n                name=\"email\"\n                id=\"email\"\n                onBlur={this.handleBlur}\n                error={this.getError('email')}\n              ></charma-input>\n            </div>\n            <div class=\"\">\n              <charma-input\n                required={true}\n                value={deliveryState.streetAddress}\n                onValueChange={this.handleInputChange}\n                label={i18next.t('shippingInfromation.form.street_address')}\n                name=\"streetAddress\"\n                id=\"streetAddress\"\n                onBlur={this.handleBlur}\n                error={this.getError('streetAddress')}\n              ></charma-input>\n            </div>\n            <div class=\"\">\n              <charma-input\n                value={deliveryState.streetAddress2}\n                onValueChange={this.handleInputChange}\n                label={i18next.t('shippingInfromation.form.street_address2')}\n                name=\"streetAddress2\"\n                id=\"streetAddress2\"\n                onBlur={this.handleBlur}\n                error={this.getError('streetAddress2')}\n              ></charma-input>\n            </div>\n\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 \">\n              <charma-input\n                required={true}\n                value={deliveryState.postalCode}\n                onValueChange={this.handleInputChange}\n                label={i18next.t('shippingInfromation.form.postal_code')}\n                name=\"postalCode\"\n                id=\"postalCode\"\n                onBlur={this.handleBlur}\n                error={this.getError('postalCode')}\n              ></charma-input>\n              <charma-input\n                required={true}\n                value={deliveryState.city}\n                onValueChange={this.handleInputChange}\n                label={i18next.t('shippingInfromation.form.city')}\n                name=\"city\"\n                id=\"city\"\n                onBlur={this.handleBlur}\n                error={this.getError('city')}\n              ></charma-input>\n            </div>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 \">\n              <charma-dropdown\n                required={true}\n                defaultValue={{\n                  label: 'Sweden',\n                  value: 'SE',\n                }}\n                onValueChange={e => {\n                  deliveryState.country = e.detail;\n                }}\n                label={i18next.t('shippingInfromation.form.country')}\n                name=\"country\"\n                id=\"country\"\n                options={this.options}\n              ></charma-dropdown>\n            </div>\n            <div class=\"relative py-2 mb-2\">\n              <charma-textarea\n                label={i18next.t('shippingInfromation.form.comment')}\n                value={deliveryState.comment}\n                onChange={(e: Event) => {\n                  deliveryState.comment = (e.target as HTMLTextAreaElement).value;\n                }}\n                name=\"comment\"\n                id=\"comment\"\n              />\n            </div>\n          </div>\n        </section>\n      </Host>\n    );\n  }\n}\n"]}